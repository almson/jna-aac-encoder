plugins {
    id 'java'
    id 'jacoco'
    id 'org.junit.platform.gradle.plugin' version '1.1.0'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

group 'org.sheinbergon'
version '0.1.0'


sourceCompatibility = 1.9

repositories {
    mavenCentral()
}

ext.depVersions = [
        jna         : '4.5.1',
        commonsLang3: '3.7',
        lombok      : '1.16.20'
]

ext.testDepVersions = [
        junitPlatform: '1.1.0',
        junit        : '5.1.0',
        mediaInfo    : '1.0.0.RELEASE'
]

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}

dependencies {
    // JNA
    compile "net.java.dev.jna:jna:${depVersions.jna}"

    // Utility
    compile "org.apache.commons:commons-lang3:${depVersions.commonsLang3}"

    // Lombok
    compileOnly "org.projectlombok:lombok:${depVersions.lombok}"

    // Junit 5
    testCompile "org.junit.jupiter:junit-jupiter-api:${testDepVersions.junit}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${testDepVersions.junit}"
    testRuntime "org.junit.platform:junit-platform-launcher:${testDepVersions.junitPlatform}"

    // MediaInfo
    testCompile "com.abercap:mediainfo-java-api:${testDepVersions.mediaInfo}"
}

junitPlatform {
    details 'tree'

    filters {
        includeClassNamePattern '.*Test'
    }
}

jacoco {
    toolVersion = '0.8.0'
    applyTo junitPlatformTest
}

jacocoTestReport {
    reports {
        html.enabled = false
        xml.enabled = true
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

junitPlatformTest {
    jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}