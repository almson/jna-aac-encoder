plugins {
    id 'java'
    id 'maven'
    id 'signing'
    id 'maven-publish'
}
apply from: 'common.gradle'

def libSource = project.properties['libSource']
if (libSource == null) {
    throw new GradleException("'libSource' system property must be set")
}

task win64Jar(type: Jar) {
    def target = 'win32-x86-64'
    classifier = target
    doFirst { buildLibrary(libSource, target) }
    archiveName = "${archivesBaseName}-${version}-${target}.jar"
    from sourceSets.main.output
    from("${libSource}/.libs") {
        include '*.dll'
        into target
    }
    from("${projectDir}") {
        include 'NOTICE'
    }
    rename '.+(fdk-aac).+(\\.dll)', '$1$2'
}

task win32Jar(type: Jar) {
    def target = 'win32-i686'
    classifier = target
    doFirst { buildLibrary(libSource, target) }
    archiveName = "${archivesBaseName}-${version}-${target}.jar"
    from sourceSets.main.output
    from("${libSource}/.libs") {
        include '*.dll'
        into target
    }
    from("${projectDir}") {
        include 'NOTICE'
    }
    rename '.+(fdk-aac).+(\\.dll)', '$1$2'
}

task linux64Jar(type: Jar) {
    def target = 'linux-x86-64'
    classifier = target
    doFirst { buildLibrary(libSource, target) }
    archiveName = "${archivesBaseName}-${version}-${target}.jar"
    from sourceSets.main.output
    from("${libSource}/.libs") {
        include '*.so'
        into target
    }
    from("${projectDir}") {
        include 'NOTICE'
    }
}

void buildLibrary(source, target) {
    exec {
        workingDir projectDir
        commandLine "scripts/build_library.sh", "-s", source, "-t", target
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives linux64Jar
    archives win64Jar
    archives win32Jar
}


signing {
    sign configurations.archives
}

publishing.publications {
    maven(MavenPublication) {
        from components.java
        artifact tasks.javadocJar
        artifact tasks.sourcesJar
        artifact tasks.linux64Jar
        artifact tasks.win64Jar
        artifact tasks.win32Jar
    }
}
publishing.repositories {
    mavenLocal()
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'jna-aac-encoder'
                packaging 'jar'
                description 'Fdk-AAC encoder JNA bridge'
                url 'https://github.com/sheinbergon/jna-aac-encoder'

                organization {
                    name 'sheinbergon'
                }
                scm {
                    url 'https://github.com/sheinbergon/jna-aac-encoder'
                    connection 'scm:git:git://github.com/sheinbergon/jna-aac-encoder.git'
                    developerConnection 'scm:git:git@github.com:sheinbergon/jna-aac-encoder.git'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License, Version 3.0'
                        url 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id 'sheinbergon'
                        name 'Idan Sheinberg'
                        email 'ishinberg0@gmail.com'
                    }
                }
            }
        }
    }
}